using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data;
using System.Data.SqlClient;
using StoreManagement.DAL.DAO;

namespace StoreManagement.DAL.GATEWAY
{
    class PurchaseGateway
    {
        #region Purchase Requisition
        //manage Goods Receive(insert, update, delete)
        public Boolean PrrManagement(Requisition prr)
        {
            SqlTransaction transaction;
            DBConnection dbConnection = new DBConnection();
            SqlConnection sqlConnection = dbConnection.GetConnection;

            sqlConnection.Open();
            transaction = sqlConnection.BeginTransaction();
            SqlCommand cmd = new SqlCommand("PrrManagement", sqlConnection, transaction);

            cmd.CommandType = CommandType.StoredProcedure;
            try
            {
                SqlParameter PReqNo = cmd.Parameters.Add("@PReqNo", SqlDbType.BigInt);
                PReqNo.Direction = ParameterDirection.Input;
                PReqNo.Value = prr.PrrNo;

                SqlParameter SCatID = cmd.Parameters.Add("@SCatID", SqlDbType.SmallInt);
                SCatID.Direction = ParameterDirection.Input;
                SCatID.Value = prr.SCategory;

                SqlParameter UnitID = cmd.Parameters.Add("@UnitID", SqlDbType.SmallInt);
                UnitID.Direction = ParameterDirection.Input;
                UnitID.Value = prr.UnitID;

                SqlParameter TimePeriod = cmd.Parameters.Add("@TimePeriod", SqlDbType.VarChar, 10);
                TimePeriod.Direction = ParameterDirection.Input;
                TimePeriod.Value = prr.TimePeriod;

                SqlParameter RequisitionYear = cmd.Parameters.Add("@PRYear", SqlDbType.VarChar,10);
                RequisitionYear.Direction = ParameterDirection.Input;
                RequisitionYear.Value = prr.PRYear;

                SqlParameter TotalItem = cmd.Parameters.Add("@TotalItem", SqlDbType.Decimal);
                TotalItem.Direction = ParameterDirection.Input;
                TotalItem.Value = prr.TotalItem;

                SqlParameter EntryBy = cmd.Parameters.Add("@EntryBy", SqlDbType.VarChar, 10);
                EntryBy.Direction = ParameterDirection.Input;
                EntryBy.Value = LoginUser.UserID;

                SqlParameter Condition = cmd.Parameters.Add("@Condition", SqlDbType.VarChar, 10);
                Condition.Direction = ParameterDirection.Input;
                Condition.Value = prr.Condition;

                SqlParameter Flag = cmd.Parameters.Add("@Flag", SqlDbType.VarChar, 10);
                Flag.Direction = ParameterDirection.Output;


                //Start:inasert Purchase requisition information                
                cmd.ExecuteNonQuery();
                if (cmd.Parameters["@Flag"].Value.ToString().Trim() == "1")
                {
                    transaction.Rollback();
                    return false;
                }
                //End:inasert order information 

                //Start:inasert grr item information
                if (prr.Products.Count > 0)
                {
                    foreach (var prrItem in prr.Products)
                    {
                        if (!PRRDetailManagement(prrItem, prr.PrrNo, sqlConnection, transaction))
                        {
                            transaction.Rollback();
                            return false;
                        }
                    }
                }
                //End:inasert grr item information  

                transaction.Commit();
            }
            catch
            {
                //return e.Message;
                return false;
            }
            finally
            {
                cmd.Dispose();
                sqlConnection.Close();
                sqlConnection.Dispose();
                prr = null;
            }
            return true;
        }

        private Boolean PRRDetailManagement(Product prrItem, string prrNo, SqlConnection connection, SqlTransaction transaction)
        {
            SqlConnection sqlConnection = connection;
            SqlCommand cmd = new SqlCommand("PrrDetailManagement", sqlConnection, transaction);
            cmd.CommandType = CommandType.StoredProcedure;

            try
            {
                SqlParameter SlNo = cmd.Parameters.Add("@SlNo", SqlDbType.BigInt);
                SlNo.Direction = ParameterDirection.Input;
                SlNo.Value = prrItem.PID;

                SqlParameter OrderNo = cmd.Parameters.Add("@GoodsID", SqlDbType.Int);
                OrderNo.Direction = ParameterDirection.Input;
                OrderNo.Value = prrItem.PCode;

                SqlParameter Ordered = cmd.Parameters.Add("@Stock", SqlDbType.Decimal);
                Ordered.Direction = ParameterDirection.Input;
                Ordered.Value = prrItem.StockQty;

                SqlParameter QtyBfrInspection = cmd.Parameters.Add("@Required", SqlDbType.Decimal);
                QtyBfrInspection.Direction = ParameterDirection.Input;
                QtyBfrInspection.Value = prrItem.ReqQty;

                SqlParameter QtyAftInspection = cmd.Parameters.Add("@Remarks", SqlDbType.VarChar,500);
                QtyAftInspection.Direction = ParameterDirection.Input;
                QtyAftInspection.Value = prrItem.Remarks;

                SqlParameter Condition = cmd.Parameters.Add("@Condition", SqlDbType.VarChar, 10);
                Condition.Direction = ParameterDirection.Input;
                Condition.Value = prrItem.Condition;

                SqlParameter Flag = cmd.Parameters.Add("@Flag", SqlDbType.VarChar, 10);
                Flag.Direction = ParameterDirection.Output;

                cmd.ExecuteNonQuery();
                if (cmd.Parameters["@Flag"].Value.ToString().Trim() == "1")
                {
                    return false;
                }
            }
            catch
            {
                return false;
            }
            finally
            {
                cmd.Dispose();
                prrItem = null;
            }
            return true;
        }

        public DataTable PurchaseRequistion(string choice, string condition)
        {
            DataTable dt = new DataTable();
            string queryString = "GetPruchaseRequisitionList";
            DBConnection dbConnection = new DBConnection();
            SqlConnection sqlConnection = dbConnection.GetConnection;
            SqlCommand cmd = new SqlCommand(queryString, sqlConnection);
            cmd.CommandType = CommandType.StoredProcedure;
            try
            {
                SqlParameter Choice = cmd.Parameters.Add("@choice", SqlDbType.VarChar, 10);
                Choice.Direction = ParameterDirection.Input;
                Choice.Value = choice;

                SqlParameter Condition = cmd.Parameters.Add("@condition", SqlDbType.VarChar, 100);
                Condition.Direction = ParameterDirection.Input;
                Condition.Value = condition;

                SqlDataAdapter sqlDataAdapterObj = new SqlDataAdapter(cmd);
                sqlDataAdapterObj.Fill(dt);
                return dt;
            }
            catch
            {
                return null;
            }
            finally
            {
                cmd.Dispose();
                sqlConnection.Close();
            }
        }
        #endregion

        #region Purchase Order
        
        //manage Purchase Order(insert, update, delete)
        public Boolean PurOrdManagement(Requisition prr)
        {
            SqlTransaction transaction;
            DBConnection dbConnection = new DBConnection();
            SqlConnection sqlConnection = dbConnection.GetConnection;

            sqlConnection.Open();
            transaction = sqlConnection.BeginTransaction();
            SqlCommand cmd = new SqlCommand("PurOrdManagement", sqlConnection, transaction);

            cmd.CommandType = CommandType.StoredProcedure;
            try
            {
                SqlParameter PurOrdID = cmd.Parameters.Add("@PurOrdID", SqlDbType.BigInt);
                PurOrdID.Direction = ParameterDirection.Input;
                PurOrdID.Value = prr.PurOrdID;

                SqlParameter PurOrdNo = cmd.Parameters.Add("@PurOrdNo", SqlDbType.VarChar, 100);
                PurOrdNo.Direction = ParameterDirection.Input;
                PurOrdNo.Value = prr.PurOrdNo;

                SqlParameter PReqNo = cmd.Parameters.Add("@PReqNo", SqlDbType.BigInt);
                PReqNo.Direction = ParameterDirection.Input;
                PReqNo.Value = prr.PrrNo;

                SqlParameter CepNO = cmd.Parameters.Add("@CepNO", SqlDbType.VarChar, 100);
                CepNO.Direction = ParameterDirection.Input;
                CepNO.Value = prr.CepNO;

                SqlParameter SupplierID = cmd.Parameters.Add("@SupplierID", SqlDbType.Int);
                SupplierID.Direction = ParameterDirection.Input;
                SupplierID.Value = prr.SupplierID;

                SqlParameter PurOrdDate = cmd.Parameters.Add("@PurOrdDate", SqlDbType.DateTime);
                PurOrdDate.Direction = ParameterDirection.Input;
                PurOrdDate.Value = prr.PurOrdDate;

                SqlParameter TotalItem = cmd.Parameters.Add("@TotalItem", SqlDbType.Decimal);
                TotalItem.Direction = ParameterDirection.Input;
                TotalItem.Value = prr.TotalItem;

                SqlParameter EntryBy = cmd.Parameters.Add("@EntryBy", SqlDbType.VarChar, 10);
                EntryBy.Direction = ParameterDirection.Input;
                EntryBy.Value = LoginUser.UserID;

                SqlParameter Condition = cmd.Parameters.Add("@Condition", SqlDbType.VarChar, 10);
                Condition.Direction = ParameterDirection.Input;
                Condition.Value = prr.Condition;

                SqlParameter Flag = cmd.Parameters.Add("@Flag", SqlDbType.VarChar, 10);
                Flag.Direction = ParameterDirection.Output;


                //Start:inasert Purchase requisition information                
                cmd.ExecuteNonQuery();
                if (cmd.Parameters["@Flag"].Value.ToString().Trim() == "1")
                {
                    transaction.Rollback();
                    return false;
                }
                //End:inasert order information 

                //Start:inasert grr item information
                if (prr.Products.Count > 0)
                {
                    foreach (var prrItem in prr.Products)
                    {
                        if (!PurOrdDetailManagement(prrItem, prr.PrrNo, sqlConnection, transaction))
                        {
                            transaction.Rollback();
                            return false;
                        }
                    }
                }
                //End:inasert grr item information  

                transaction.Commit();
            }
            catch
            {
                //return e.Message;
                return false;
            }
            finally
            {
                cmd.Dispose();
                sqlConnection.Close();
                sqlConnection.Dispose();
                prr = null;
            }
            return true;
        }

        private Boolean PurOrdDetailManagement(Product prrItem, string purOrdNo, SqlConnection connection, SqlTransaction transaction)
        {
            SqlConnection sqlConnection = connection;
            SqlCommand cmd = new SqlCommand("PurOrdDetailManagement", sqlConnection, transaction);
            cmd.CommandType = CommandType.StoredProcedure;

            try
            {
                SqlParameter SlNo = cmd.Parameters.Add("@SlNo", SqlDbType.BigInt);
                SlNo.Direction = ParameterDirection.Input;
                SlNo.Value = prrItem.PID;

                SqlParameter ReqPSlNo = cmd.Parameters.Add("@ReqPSlNo", SqlDbType.BigInt);
                ReqPSlNo.Direction = ParameterDirection.Input;
                ReqPSlNo.Value = prrItem.ReqPID;

                SqlParameter PurOrdNo = cmd.Parameters.Add("@PurOrdNo", SqlDbType.VarChar, 100);
                PurOrdNo.Direction = ParameterDirection.Input;
                PurOrdNo.Value = purOrdNo.Trim();

                SqlParameter OrderNo = cmd.Parameters.Add("@GoodsID", SqlDbType.Int);
                OrderNo.Direction = ParameterDirection.Input;
                OrderNo.Value = prrItem.PCode;
                
                SqlParameter QtyBfrInspection = cmd.Parameters.Add("@Required", SqlDbType.Decimal);
                QtyBfrInspection.Direction = ParameterDirection.Input;
                QtyBfrInspection.Value = prrItem.ReqQty;

                SqlParameter Ordered = cmd.Parameters.Add("@OrderedQty", SqlDbType.Decimal);
                Ordered.Direction = ParameterDirection.Input;
                Ordered.Value = prrItem.IssueQty;

                SqlParameter UnitPrice = cmd.Parameters.Add("@UnitPrice", SqlDbType.Decimal);
                UnitPrice.Direction = ParameterDirection.Input;
                UnitPrice.Value = prrItem.UnitPrice;

                SqlParameter Condition = cmd.Parameters.Add("@Condition", SqlDbType.VarChar, 10);
                Condition.Direction = ParameterDirection.Input;
                Condition.Value = prrItem.Condition;

                SqlParameter Flag = cmd.Parameters.Add("@Flag", SqlDbType.VarChar, 10);
                Flag.Direction = ParameterDirection.Output;

                cmd.ExecuteNonQuery();
                if (cmd.Parameters["@Flag"].Value.ToString().Trim() == "1")
                {
                    return false;
                }
            }
            catch
            {
                return false;
            }
            finally
            {
                cmd.Dispose();
                prrItem = null;
            }
            return true;
        }

        public DataTable PurchaseOrder(string choice, string condition)
        {
            DataTable dt = new DataTable();
            string queryString = "GetPruchaseOrderList";
            DBConnection dbConnection = new DBConnection();
            SqlConnection sqlConnection = dbConnection.GetConnection;
            SqlCommand cmd = new SqlCommand(queryString, sqlConnection);
            cmd.CommandType = CommandType.StoredProcedure;
            try
            {
                SqlParameter Choice = cmd.Parameters.Add("@choice", SqlDbType.VarChar, 10);
                Choice.Direction = ParameterDirection.Input;
                Choice.Value = choice;

                SqlParameter Condition = cmd.Parameters.Add("@condition", SqlDbType.VarChar, 100);
                Condition.Direction = ParameterDirection.Input;
                Condition.Value = condition;

                SqlDataAdapter sqlDataAdapterObj = new SqlDataAdapter(cmd);
                sqlDataAdapterObj.Fill(dt);
                return dt;
            }
            catch
            {
                return null;
            }
            finally
            {
                cmd.Dispose();
                sqlConnection.Close();
            }
        }
        #endregion
    }
}
